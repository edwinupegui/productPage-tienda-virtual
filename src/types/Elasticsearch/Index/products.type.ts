export type ProductType =
  | 'simple'
  | 'variable'
  | 'variation'
  | 'service'
  | 'virtual';

export interface ProductIndex {
  databaseId: number;
  id: number;
  name: string;
  price: string;
  minPrice: number;
  maxPrice: number;
  applyWarranty: boolean;
  priceFilter: number;
  regularPrice: string;
  slug: string;
  status: string;
  totalSales: number;
  stock: number;
  stockStatus: string;
  type: ProductType;
  weight: string;
  width: string;
  height: string;
  length: string;
  image: string;
  store: string;
  storeId: number;
  sku: string;
  description: string;
  modification: string;
  promotions: Promotion[];
  sellerInfo?: SellerInfo;
  categories: Category[];
  isUpdate: boolean;
  visible: boolean;
  totalOff: number;
  isIvaDiscount: boolean;
  locations: unknown[];
  variations: ProductIndex[];
}

export interface Category {
  id: number;
  name: string;
  slug: string;
}

export interface Promotion {
  name: string;
  code: string;
  discountValue: number;
  definedFromPromotion: boolean;
  definedToPromotion: boolean;
  validFrom: string;
  validTo: string;
}

// Generated by https://quicktype.io

export interface ProductBySlug {
  took: number;
  timed_out: boolean;
  _shards: Shards;
  hits: Hits;
}

export interface catalogProducts {
  took: number;
  timed_out: boolean;
  _shards: Shards;
  hits: Hits;
}

export interface Shards {
  total: number;
  successful: number;
  skipped: number;
  failed: number;
}

export interface Hits {
  total: Total;
  max_score: number;
  hits: Hit[];
}

export interface Hit {
  _index: string;
  _type: string;
  _id: string;
  _score: number;
  _source: Source;
}

export interface Source {
  isUsed: boolean;
  objectID: string;
  databaseId: string;
  id: string;
  name: string;
  price: string | number;
  minPrice: number;
  maxPrice: number;
  applyWarranty: boolean;
  priceFilter: number;
  regularPrice: string;
  slug: string;
  status: string;
  totalSales: number;
  stock: number;
  stockStatus: string;
  type: ProductType;
  weight: number;
  width: number;
  height: number;
  length: number;
  image: string;
  images: Image[];
  store: string;
  sellerInfo: SellerInfo;
  storeId: number;
  sku: string;
  description: string;
  modification: string;
  creation: string;
  promotions: Promotion[];
  variations?: Source[];
  atributes: Atribute[];
  categories?: Category[];
  isUpdate: boolean;
  visible: boolean;
  totalOff: number;
  isIvaDiscount: boolean;
  locations: Location[];
  checkTransport: boolean;
  assumedValue: number;
  warehouseId: number;
  brands: Brand[];
  warranty: Warranty;
  warehouses: warehouseOfOriginOfTheProduct[];
}

export interface warehouseOfOriginOfTheProduct {
  city: string;
  name: string;
}

export interface Warranty {
  unit: string;
  value: number;
  warrantyInDays: number;
}

export interface Brand {
  id: number;
  name: string;
  slug: string;
  imageUrl: string;
  isActive: boolean;
  description: string;
  warehouses: warehouseOfOriginOfTheProduct[];
}

export interface warehouseOfOriginOfTheProduct {
  city: string;
  name: string;
}
export interface Atribute {
  name: string;
  value: string[];
}

export interface Category {
  id: number;
  name: string;
  slug: string;
}

export interface Image {
  src: string;
  name: string;
  alt: string;
}

export interface Location {
  lat: number;
  lon: number;
}

export interface SellerInfo {
  sellerId: number;
  name: string;
  slug: string;
  city: string;
  imageUrl: string;
}

export interface Total {
  value: number;
  relation: string;
}
